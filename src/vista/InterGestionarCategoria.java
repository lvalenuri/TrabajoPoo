/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.ResultSetImpl;
import conexion.Conexion;
import controlador.controlador_categoria;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import modelo.Categoriaa;

/**
 *
 * @author salomeamayarios
 */
public class InterGestionarCategoria extends javax.swing.JInternalFrame {
    
    private int idCategoria;

    
    public InterGestionarCategoria() {
        initComponents();
        this.setSize(new Dimension(600, 400));
        this.setTitle("Gestionar Categorias");
        
        this.CargarTablaCategorias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_categoria = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton_Eliminar = new javax.swing.JButton();
        jButton_Actualizar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_descripcion = new javax.swing.JTextField();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Categorias");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_categoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_categoria);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 350, 250));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, -1, -1));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Eliminar.setBackground(new java.awt.Color(255, 0, 51));
        jButton_Eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Eliminar.setText("Eliminar");
        jButton_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarActionPerformed(evt);
            }
        });
        jPanel4.add(jButton_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, 20));

        jButton_Actualizar.setBackground(new java.awt.Color(0, 255, 0));
        jButton_Actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Actualizar.setText("Actualizar");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        jPanel4.add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 90, 20));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 130, 80));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Descripcion:");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTextField_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel5.add(jTextField_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 170, -1));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 190, 80));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon("/Users/salomeamayarios/NetBeansProjects/Sistema_Supermercado_Sa/fondo3.jpg")); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed
        
        if (!jTextField_descripcion.getText().isEmpty()) {
            
            Categoriaa categoria = new Categoriaa();
            controlador.controlador_categoria controlCategori = new controlador_categoria();
            // trim es para eliminar los espacios de la cadena 
            categoria.setDescripcion(jTextField_descripcion.getText().trim());
            
            if (controlCategori.actualizar(categoria, idCategoria)) {
                JOptionPane.showMessageDialog(null, "Categoria actualizada");
                jTextField_descripcion.setText("");// dejar en blanco cuando uno oprima
                this.CargarTablaCategorias(); // tabla se actualice
                
                
            }else{
                JOptionPane.showMessageDialog(null, "Error al actualizar Categoria");
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
                    
            
        }
        
        
    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarActionPerformed
        if (!jTextField_descripcion.getText().isEmpty()) {
            
            Categoriaa categoria = new Categoriaa();
            controlador.controlador_categoria controlCategori = new controlador_categoria();
            // trim es para eliminar los espacios de la cadena 
            categoria.setDescripcion(jTextField_descripcion.getText().trim());
            
            if (controlCategori.eliminar(idCategoria)) {
                
                JOptionPane.showMessageDialog(null, "Categoria Eliminada");
                jTextField_descripcion.setText("");// dejar en blanco cuando uno oprima
                this.CargarTablaCategorias(); // tabla se actualice
                
                
            }else{
                JOptionPane.showMessageDialog(null, "Error al eliminar Categoria");
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
                    
            
        }  
    }//GEN-LAST:event_jButton_EliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_categoria;
    private javax.swing.JTextField jTextField_descripcion;
    // End of variables declaration//GEN-END:variables

/*
    metodo para mostrar todas las categorias 
    
    */
    
 private void CargarTablaCategorias(){
     Connection con = Conexion.conectar();
     
     DefaultTableModel model = new DefaultTableModel();
     String sql = "select idCategoria, descripcion, estado from tb_categoria";
     Statement st;
     
     try {
         st = con.createStatement();
         ResultSetImpl rs = (ResultSetImpl) st.executeQuery(sql);
         InterGestionarCategoria.jTable_categoria = new JTable(model);
         InterGestionarCategoria.jScrollPane1.setViewportView(InterGestionarCategoria.jTable_categoria);
         
         model.addColumn("idCategoria");
         model.addColumn("descripcion");
         model.addColumn("estado");
         
         while(rs.next()){
             Object fila[] = new Object[3]; 
             
             for (int i = 0; i < 3; i++) {
                 fila [i] = rs.getObject(i+1);
                 
                 
             }
             model.addRow(fila);
             
         }
         con.close();
         
         
         
     } catch(SQLException e){
         System.out.println("Error al llenar la tabla de categorias: "+e);
         
     } 
     jTable_categoria.addMouseListener(new MouseAdapter(){
        @Override 
         public void mouseClicked(MouseEvent e){
            int fila_point = jTable_categoria.rowAtPoint(e.getPoint());
            int columna_point = 0;
            
            if(fila_point > -1){
                idCategoria = (int) model.getValueAt(fila_point, columna_point);
                EnviarDatosCategoriaSeleccionada(idCategoria);
            } 
         }
         
         
     });
     
 }  
 private void EnviarDatosCategoriaSeleccionada(int idCategoria){
     try{
          Connection con = Conexion.conectar();
          PreparedStatement pst = (PreparedStatement) con.prepareStatement(
                  "select * from tb_categoria where idCategoria = '"+ idCategoria+"'");
         
          ResultSetImpl rs = (ResultSetImpl) pst.executeQuery();
          
          if (rs.next()) {
              jTextField_descripcion.setText(rs.getString("descripcion"));
             
         }
         con.close();
          
          
     }catch(SQLException e){
         System.out.println("Error al seleccionar categoria: "+e);
         
     } 
     
     
     
     
 }
    

}
